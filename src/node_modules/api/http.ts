import axios from 'axios';

async function send({ method, path, data = {}, token }) {
  try {
    const response = await axios({
      method,
      baseURL: process.env.API_BASE_URL,
      url: path,
      data,
      headers: {
        ...(token ? { Authorization: `Bearer ${token}` } : {})
      }
    });

    return new Promise(resolve => resolve(response.data));
  }catch (error) {
    throw error.response.data;
  }
}

export function post(path: string, data, token = null) {
  return send({ method: 'post', path, data, token });
}

export function put(path: string, data, token = null) {
  return send({ method: 'put', path, data, token });
}

export function del(path: string, token = null) {
  return send({ method: 'delete', path, token });
}

export function get(path: string, data = {}, token = null) {
  const params = Object.keys(data).map(key => `${key}=${data[key]}`).join('&')
  return send({
    method: 'get',
    path: `${path}${params ? '?' + params : ''}`,
    token
  });
}
